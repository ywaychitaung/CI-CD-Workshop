name: CI-CD-Workshop

on:
  push:
    branches:
      - 'v[0-9]+.[0-9]+'

jobs:
  success_build:
    if: ${{ startsWith(github.event.head_commit.message, '#norun') != true }}
    runs-on: ubuntu-latest
    steps:
    - name: Check out the code
      uses: actions/checkout@v3

    - name: Scan for Vulnerabilities
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'table'
        ignore-unfixed: true
        severity: '${{ secrets.SEVERITY }}'

    - name: Install cosign
      if: github.event_name != 'pull_request'
      uses: sigstore/cosign-installer@2.2.0
      with:
        cosign-release: 'v2.2.0'

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2.1.0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2.5.0

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2.1.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - id: docker_meta
      uses: docker/metadata-action@v4.4.0
      with:
        images: ghcr.io/sigstore/sample-honk
        tags: type=sha,format=long

    - name: Build and Push container images
      uses: docker/build-push-action@v4.0.0
      id: build-and-push
      with:
        platforms: linux/amd64,linux/arm/v7,linux/arm64
        push: true
        tags: ${{ steps.docker_meta.outputs.tags }}

    # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
    - name: Sign image with a key
      run: |
        cosign sign --yes --key env://COSIGN_PRIVATE_KEY "${TAGS}@${DIGEST}"
      env:
        TAGS: ${{ steps.docker_meta.outputs.tags }}
        COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
        COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        DIGEST: ${{ steps.build-and-push.outputs.digest }}

    - name: Sign the images with GitHub OIDC Token
      env:
        DIGEST: ${{ steps.build-and-push.outputs.digest }}
        TAGS: ${{ steps.docker_meta.outputs.tags }}
      run: cosign sign --yes "${TAGS}@${DIGEST}"

    - name: Send GitHub Action trigger data to Slack workflow
      uses: rtCamp/action-slack-notify@v2
      env:
          SLACK_TITLE: "Image build and signed"
          SLACK_MESSAGE: |
            Name: Yway Chit Aung
            Matriculation: A0287270Y
            Email: e1285216@u.nus.edu
            GitHub: https://github.com/ywaychitaung/CI-CD-Workshop.git
            Docker: https://hub.docker.com/repository/docker/ywaychitaung/ci-cd-workshop/general
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}